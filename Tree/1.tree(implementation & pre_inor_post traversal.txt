//TREE
/*
IMPLEMENTATION
&
display (pre-order)/inorder/post-order
*/
#include<bits/stdc++.h>
using namespace std;
class node
{
  public:  
    int data;
    node* left;
    node* right;
    node(int d)
    {
        data=d;
        left=nullptr;
        right=nullptr;
    }
};
node * buildtree()
{
    int d;
    cin>>d;
    if(d==-1)
    return nullptr;
    node* root=new node(d);
    root->left=buildtree();
    root->right=buildtree();
    return root;
}
/*preorder
follows:-root-left-right
*/
void display(node * root)
{
    if(root==nullptr)
    return ;
    cout<<root->data<<" ";
    display(root->left);
    display(root->right);
}
/*inorder
follows:-left-root-right
*/
void inorder(node * root)
{
    if(root==nullptr)
    return ;
    display(root->left);
    cout<<root->data<<" ";
    display(root->right);
}
/*postorder
follows:-left-right-root
*/
void postorder(node * root)
{
    if(root==nullptr)
    return ;
    display(root->left);
    display(root->right);
    cout<<root->data<<" ";

}


int main()
{
node * root= buildtree();
display(root);
cout<<"\n";
inorder(root);
cout<<"\n";
postorder(root);
}
